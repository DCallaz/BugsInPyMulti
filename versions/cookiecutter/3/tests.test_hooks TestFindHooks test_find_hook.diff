from cookiecutter import utils, hooks
# BLOCK
import os
# BLOCK
import pytest
# BLOCK
    def test_find_hook(self):
        """Finds the specified hook."""
        with utils.work_in(self.repo_path):
            expected_pre = os.path.abspath('hooks/pre_gen_project.py')
            actual_hook_path = hooks.find_hook('pre_gen_project')
            assert expected_pre == actual_hook_path[0]

            expected_post = os.path.abspath('hooks/{}'.format(self.post_hook))
            actual_hook_path = hooks.find_hook('post_gen_project')
            assert expected_post == actual_hook_path[0]
# FILE: tests/hooks-abort-render/hooks/pre_gen_project.py
#!/usr/bin/env python
# flake8: noqa

"""Simple pre-gen hook for testing the handling of different exit codes."""

import sys

{% if cookiecutter.abort_pre_gen == "yes" %}
sys.exit(5)
{% else %}
sys.exit(0)
{% endif %}
# FILE: tests/test-pyhooks/hooks/pre_gen_project.py
#!/usr/bin/env python
"""Simple pre-gen hook for testing project folder and custom file creation."""

print('pre generation hook')
f = open('python_pre.txt', 'w')
f.close()
# FILE: tests/test-shellhooks-empty/hooks/pre_gen_project.sh

# FILE: tests/test-extensions/custom-extension-pre/hooks/pre_gen_project.py
"""Test pre-gen hook in extensions are available and exposed methods are callable."""
import sys

if '{% hello cookiecutter.name %}' == 'Hello Cookiemonster!':
    sys.exit(0)
else:
    sys.exit(1)
# FILE: tests/test-shellhooks-win/hooks/pre_gen_project.bat
@echo off

echo pre generation hook
echo. >shell_pre.txt
# FILE: tests/test-shellhooks/hooks/pre_gen_project.sh
#!/bin/bash

echo 'pre generation hook';
touch 'shell_pre.txt'
# FILE: tests/test-pyshellhooks/hooks/pre_gen_project.py
#!/usr/bin/env python
"""Simple pre-gen hook for testing project folder and custom file creation."""


print('pre generation hook')
f = open('python_pre.txt', 'w')
f.close()
# FILE: tests/test-pyshellhooks/hooks/pre_gen_project.sh
#!/bin/bash

echo 'post generation hook';
touch 'shell_pre.txt'
# FILE: tests/hooks-abort-render/hooks/post_gen_project.py
#!/usr/bin/env python
# flake8: noqa

"""Simple post-gen hook for testing the handling of different exit codes."""

import sys

{% if cookiecutter.abort_post_gen == "yes" %}
sys.exit(5)
{% else %}
sys.exit(0)
{% endif %}
# FILE: tests/test-pyhooks/hooks/post_gen_project.py
#!/usr/bin/env python
"""Simple post-gen hook for testing project folder and custom file creation."""

print('pre generation hook')
f = open('python_post.txt', 'w')
f.close()
# FILE: tests/test-extensions/custom-extension-post/hooks/post_gen_project.py
"""Test post-gen hook in extensions are available and exposed methods are callable."""
import sys

if '{% hello cookiecutter.name %}' == 'Hello Cookiemonster!':
    sys.exit(0)
else:
    sys.exit(1)
# FILE: tests/test-shellhooks-win/hooks/post_gen_project.bat
@echo off

echo post generation hook
echo. >shell_post.txt
# FILE: tests/test-shellhooks/hooks/post_gen_project.sh
#!/bin/bash

echo 'post generation hook';
touch 'shell_post.txt'
# FILE: tests/test-pyshellhooks/hooks/post_gen_project.py
#!/usr/bin/env python
"""Simple post-gen hook for testing project folder and custom file creation."""

print('pre generation hook')
f = open('python_post.txt', 'w')
f.close()
# FILE: tests/test-pyshellhooks/hooks/post_gen_project.sh
#!/bin/bash

echo 'post generation hook';
touch 'shell_post.txt'
