from fastapi.encoders import jsonable_encoder
# BLOCK
import pytest
# BLOCK
from pydantic import BaseModel
# BLOCK
class ModelWithDefault(BaseModel):
    foo: str = ...
    bar: str = "bar"
    bla: str = "bla"
# BLOCK
def test_encode_model_with_default():
    model = ModelWithDefault(foo="foo", bar="bar")
    assert jsonable_encoder(model) == {"foo": "foo", "bar": "bar", "bla": "bla"}
    assert jsonable_encoder(model, exclude_unset=True) == {"foo": "foo", "bar": "bar"}
    assert jsonable_encoder(model, exclude_defaults=True) == {"foo": "foo"}
    assert jsonable_encoder(model, exclude_unset=True, exclude_defaults=True) == {
        "foo": "foo"
    }
