#!/bin/python3
import inspect
import importlib
import sys
import os

if __name__ == "__main__":
    if (len(sys.argv) < 2):
        print("USAGE: splice <test file> [<test class>] <test_method>")
    sys.path.insert(1, os.getcwd())
    test_file = sys.argv[1]
    test_method = sys.argv[-1]
    test_class = None
    if (len(sys.argv) == 4):
        test_class = sys.argv[2]
    test_module = importlib.import_module(test_file)
    if (test_class is not None):
        test_module = getattr(test_module, test_class)
    code, sloc = inspect.findsource(test_module)
    # Update the method if it exists
    if (hasattr(test_module, test_method)):
        test_lines = inspect.getsourcelines(getattr(test_module, test_method))
        sloc, eloc = (test_lines[1]-1, test_lines[1]+len(test_lines[0])-2)
    else:
        # skip variable declarations
        while (code[sloc].strip() != ""):
            sloc += 1
        # add blank line before and after
        sloc += 1
        eloc = sloc - 1
    splice = sys.stdin.readlines()
    code = code[:sloc] + splice + code[eloc+1:]
    # print(*code, sep="", end="")
    test_file_out = open(test_file.replace('.', '/')+".py", 'w')
    print(*code, sep="", end="", file=test_file_out)
    test_file_out.close()
